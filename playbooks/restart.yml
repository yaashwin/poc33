---
- hosts: servers
  become: true  # Escalate privileges for all tasks
  vars:
    jenkins_user: "admin"            # Jenkins user

  tasks:
    # Jenkins Initial Setup
    - name: Fetch Jenkins initial admin password
      slurp:
        src: /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_initial_password

    - name: Decode the retrieved admin password
      set_fact:
        initial_password: "{{ jenkins_initial_password['content'] | b64decode }}"

    - name: Wait briefly for Jenkins to be fully operational
      pause:
        seconds: 30

    - name: Disable Jenkins setup wizard for future logins
      copy:
        content: "2.462.2"
        dest: /var/lib/jenkins/jenkins.install.InstallUtil.lastExecVersion
        mode: '0644'

    # Jenkins Plugin Management
    - name: Read API token from file
      slurp:
        src: api_token.txt  # Adjust this path if needed
      register: api_token_file

    - name: Set the Jenkins API token
      set_fact:
        jenkins_password: "{{ api_token_file.content | b64decode | trim }}"  # Decode the base64 content

    - name: Define Jenkins plugins
      set_fact:
        jenkins_plugins:
          sonar:
            version: "latest"
          git-server:
            version: "latest"
            enabled: true

    - name: Install required Jenkins plugins
      community.general.jenkins_plugin:
        name: "{{ item.key }}"
        version: "{{ item.value.version | default(omit) }}"
        state: latest
        url: "http://{{ ansible_host }}:8080"
        url_username: "{{ jenkins_user }}"
        url_password: "{{ jenkins_password }}"
      with_dict: "{{ jenkins_plugins }}"
      register: installed_plugins

    - name: Check if restart is required by any of the plugins
      set_fact:
        jenkins_restart_required: true
      when: item.changed
      with_items: "{{ installed_plugins.results }}"

    # Jenkins Restart and Finalization
    - name: Restart Jenkins if required
      ansible.builtin.service:
        name: jenkins
        state: restarted
      when: jenkins_restart_required

    - name: Wait for Jenkins to start up
      ansible.builtin.uri:
        url: "http://{{ ansible_host }}:8080"
        status_code: 200
        timeout: 5
      register: jenkins_service_status
      retries: 60
      delay: 5
      until: >
        'status' in jenkins_service_status and
        jenkins_service_status['status'] == 200
      when: jenkins_restart_required

    # SonarQube Token Management
    - name: Read SonarQube token from sonar_token.txt
      slurp:
        src: sonar_token.txt  # Adjust this path as needed
      register: sonar_token

    - name: Set SonarQube token from decoded content
      set_fact:
        sonar_token_value: "{{ sonar_token.content | b64decode }}"

    - name: Get Jenkins Crumb for authentication
      uri:
        url: "http://{{ ansible_host }}:8080/crumbIssuer/api/json"
        method: GET
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_password }}"
        force_basic_auth: yes
        return_content: yes
      register: jenkins_crumb

    - name: Add SonarQube token to Jenkins credentials store
      uri:
        url: "http://{{ ansible_host }}:8080/manage/credentials/store/system/domain/_/createCredentials"
        method: POST
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_password }}"
        force_basic_auth: yes
        follow_redirects: all  # This allows following redirects
        headers:
          Content-Type: "application/x-www-form-urlencoded"
          Jenkins-Crumb: "{{ jenkins_crumb.json.crumb }}"
        body: "json={{ {'': '0', 'credentials': { 'scope': 'GLOBAL', 'id': 'sonarqube-token', 'secret': sonar_token_value, 'description': 'SonarQube Token', '$class': 'org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl' }} | to_json | urlencode }}"
        status_code: 200

  handlers:
    - name: Restart Jenkins
      systemd:
        name: jenkins
        state: restarted
