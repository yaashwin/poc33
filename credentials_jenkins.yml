---
- name: Add SonarQube token to Jenkins
  hosts: servers
  vars:
    jenkins_user: "admin"  # Jenkins user
  tasks:
    - name: Read Jenkins API token from api_token.txt
      ansible.builtin.slurp:
        src: api_token.txt  # Adjust this path as needed
      register: api_token

    - name: Set Jenkins password from decoded token
      set_fact:
        jenkins_password: "{{ api_token.content | b64decode }}"

    - name: Read SonarQube token from sonar_token.txt
      ansible.builtin.slurp:
        src: sonar_token.txt  # Adjust this path as needed
      register: sonar_token

    - name: Set SonarQube token from decoded content
      set_fact:
        sonar_token_value: "{{ sonar_token.content | b64decode }}"

    - name: Get Jenkins Crumb
      uri:
        url: "http://{{ ansible_host }}:8080/crumbIssuer/api/json"
        method: GET
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_password }}"
        force_basic_auth: yes
        return_content: yes
      register: jenkins_crumb

    - name: Add SonarQube token to Jenkins credentials store
      uri:
        url: "http://{{ ansible_host }}:8080/manage/credentials/store/system/domain/_/createCredentials"
        method: POST
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_password }}"
        force_basic_auth: yes
        follow_redirects: all  # This allows following redirects
        headers:
          Content-Type: "application/x-www-form-urlencoded"
          Jenkins-Crumb: "{{ jenkins_crumb.json.crumb }}"
        body: "json={{ {'': '0', 'credentials': { 'scope': 'GLOBAL', 'id': 'sonarqube-token', 'secret': sonar_token_value, 'description': 'SonarQube Token', '$class': 'org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl' }} | to_json | urlencode }}"
        status_code: 200